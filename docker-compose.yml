version: '3.7'

services:
  kong-database:
    image: postgres:${POSTGRES_VERSION:-latest}
    container_name: kong-database
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-kong}
      - POSTGRES_DB=${POSTGRES_DB:-kong}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-kong}
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong:
    depends_on:
      - kong-database
    image: kong:${KONG_VERSION:-latest}
    container_name: kong
    restart: always
    environment:
      - TZ=${TZ:-Asia/Bangkok}
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=${KONG_PG_HOST:-kong-database}
      - KONG_PG_DATABASE=${POSTGRES_DB:-kong}
      - KONG_PG_USER=${POSTGRES_USER:-kong}
      - KONG_PG_PASSWORD=${POSTGRES_PASSWORD:-kong}
      - KONG_ADMIN_LISTEN=${KONG_ADMIN_LISTEN:-0.0.0.0:8001}
      - KONG_PROXY_LISTEN=${KONG_PROXY_LISTEN:-0.0.0.0:8000, 0.0.0.0:8443 ssl http2}
      - KONG_NGINX_HTTP_RESOLVER=${KONG_NGINX_HTTP_RESOLVER:-8.8.8.8}
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_TRUSTED_IPS=0.0.0.0/0,::/0
      - KONG_REAL_IP_RECURSIVE=on
    ports:
      - 80:8000
      - 443:8443 
      - 0.0.0.0:8001:8001
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 5s
      timeout: 2s
      retries: 15
    
  # https://github.com/pantsel/konga/issues/462#issuecomment-633209833
  konga:
    image: pantsel/konga
    container_name: konga
    restart: always
    environment:
      # For use build-in filesystem db,
      # Konga creator said `I've done it with no problems on production environments.`
      # But the default `sails-disk` adapter is not designed for use as a production database;
      - NODE_ENV=development
    ports:
      - 0.0.0.0:1337:1337
    volumes:
      - ./konga_data:/app/kongadata

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/promtheus
    command:
     - '--config.file=/etc/prometheus/prometheus.yml'
    expose:
      - "9090"
    restart: always

    node_exporter:
      image: prom/node-exporter:latest
      container_name: node_exporter
      expose:
        - "9100"
      restart: always     

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    container_name: grafana
    restart: always
    links: 
      - prometheus:prometheus
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel, grafana-simple-json-datasource
    depends_on:
      - prometheus

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  graylog:
    container_name: graylog
    image: graylog/graylog:4.0
    environment:
      - TZ=America/Argentina/Buenos_Aires
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      - GRAYLOG_TIMEZONE=America/Argentina/Buenos_Aires
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
      - GRAYLOG_MONGODB_URI=mongodb://mongo/graylog
      - GRAYLOG_MONGODB_MAX_CONNECTIONS=100
      - GRAYLOG_MONGODB_THREADS_ALLOWED_TO_BLOCK_MULTIPLIER=5
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    restart: always
    depends_on:
      - mongo
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
    volumes:
      - graylog_data:/usr/share/graylog/data
      - ./plugin:/usr/share/graylog/plugin
      - ./config/graylog.conf:/usr/share/graylog/data/config/graylog.conf:ro
  
